* Понятие за Софтуерна Архитектура 

	Софтуерната архитектура е първата стъпка в процеса на проектира, за да се гарантират определени качества на системата 
	
	Софтуерното инжинерство също разглежда различното поведение и връзките на отделните елементи 
	
* Teaser какво представлява монолитната и микросървисната архитектура

	Монолитната (Monolithic) е архитектурна, която представлява слой Frontend, Backend, Databa
	
	Микросървисна (Microservices) е архитектура, която представлява отделните компоненти като малки програми, примерно Customer Support, User Interface
	
* Видове архитектурни слойове 
	
	Двуслойна архитектура (Two-Tier Architecture): прост архитектурен модел, който се състои от сървърна страна (server side) и клиентска страна (client side)
	
	Трислойна архитектура (Three-Tier Architecture): архитектурата разделя приложението на 3 независими слоя, които коминикират помежду си, те са Presentation Tier, Application/Logic Tier, Data Tier 
	(С други думи Frontend, Backend, Database)
	
	N-слойна архитектура (N-Tier Achitecture): разширение на Трислойната архитектура, просто има повече добавени слоя 
	
	Микросървисна архитектура (Microservices Architecture): архитектура, която разглежда едно голямо приложение като колекция от малки, независими услуги (сървиси)
	
	Сервизно-ориентирана архитектура (Service Oriented Arhicture): архитектура, която софтуерът се изгражда от самостоятелни, преизползваеми бизнес услуги 
	
* Главна дефиниция за софтуерна архитектура 

	Взимане на основните решенията по дизайна на една софтуерна система, включващи нейната структура, поведение, взаимодействия
	
* UML диаграми използвани за софтуерна архитектура 

	За да се визуализира софтуерната архитектура може да използваме:
	- Component Diagram (Диаграма на компонентите)
	- Deployement Diagram (Диаграма на разполагане)
	- Activity Diagram (Диаграм на дейностите)
	
* Отговорности на един софтуерен архитект 

	Докладване пред заинтересованите страни относно софтуерните изисквания (тоест говори с клиента относно софтуерната спецификация на проекта)
	
	Проектиране на документи (документи относно проекта) и продуктови спецификации относно проекта (спека относно проекта)
	
	Предоставяне на архитектурните планове, които инжинерите и разработчиците трябва да следват 
	
	Тестване на крайния продукт, за да се гарантира, че покрива изискванията 
	
* Фактори, определящи софтуерните архитектури 

	Изборът на една софтуерна архитектура не зависи само от изискванията, влият и другите фактори като:
	- технически и бизнес влиянието
	- опитът и уменията на архитекта
	- съвременните технологии 
	
* Процес на създаване на архитектура 

	Има може би няколко стъпки, който описват процеса на изграждане на софтуерна архитектура:
	- Всичко започва като клиента каже неговите неструктурирани нужди и желания
	- Чрез анализ на екипа те се превръщат в "архитектурни движещи сили" (тоест базирано на тях се изгражда архитектурата)
	- Софтуерния архитект взима решения относно дизайна, който водят нали до архитектурен дизайн 
	- Този дизайн се използва за изграждане и имплементация на системата 
	- След като е направена имплементацията тя може да повлия на мнението на клиента (тоест може да си хареса нещо ново или да иска промяна в спека)
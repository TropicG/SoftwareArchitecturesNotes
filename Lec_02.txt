* Главни разлики между функционалните изисквания и нефункционалните изисквания 

	Функционалните:
	- Те са базирани на клиентски изисквания
	- Те уточняват коя функционалност трябва да се вземе предвид
	- Функционалното тестване се извършва преди продукта да се пусне на базара 
	- Известно е само като функционално изискване 
	- Те включват тестване на техническата функционалност на системата 
	
	Нефункционални изсиквания:
	- Те се основават на разработчиците и техническите познания на екипа 
	- Те са фокусират върху това как тази функционалност трябва да бъде тествана 
	- Нефункционалните изисквания включват тестване на поддръжката, тестване на документацията и други тестове след пускането на пазара 
	- Известни са още като изисквания за качества 
	- Те включват поддръжане на качества като сигурност, използваемост
	
* Ролята на архитекта относно функционалността и качествата 

	Решенията, които взима архитекта относно софтуерната архитектура могат да допринесат за нивата на различните качества,
	например дадени решения могат да повдигнат производителността, а друго до липса на такава 
	
	
	Постигането на качества е въпрос на архитектурни решениея както и на не архитектурни решения.
	За пример не е архитектурен аспект да се направи интерфейса лесен за употреба, къде се намира елемент на екрана,
	но е архитектурно решение да влючкват различни функционалности/функции (примерно за cancel, undo, re-use)
	
* Качествени изисквания 

	Функционалните изсиквания определят какво трябва да прави софтуерната система 
	
	Качествените изисквания определят как софтуерната система да работи (те поставят ограничения върху начина по който системата ще се изпълнява)

	Ето и някои качествени изисквания:
	- Performance (Производителност): Описва колко бързо и ефективно системата отговаря на заявки при определено натоварване 
	- Reliablility (Надежност): Измерва способността на системата да работи коректно и без грешки за определен период от време 
	- Availability (Наличност): Показва каква част от времето системата е в изправност достъпна за употреба от потребителя 
	- Modifiability (Изменяемост): Отразвяа колко лесно и с какви разходи може да бъде променена или разишерена функционалността на системата 
	- Usability (Използваемост): Описва колко лесна, интуитивна и удобна е системата за крайните потребители 
	- Testability (Изпитаемост): Показва колко лесно е да се тества софтуерът, за да се открият дефекти в него 
	- Suvivability (Оцеляемост): Определя способността на системата да продължи да изпълнява критични си функции дори при атака или частичен отказ
	- Maintability (Поддръжка): Отразява колко лесно е софтуерът да бъде поддържан, което включва поправяне на грешки и звършване на малки подобрения
	- Accesibility (Достъпност): Гарантира, че системата може да се използва от хора с различни способности 
	
* Понятие за качество 

	Качеството е субективно, различните заинтересовани лица имат различни представи за това какво е "добра система"
	
	Изискванията за качество трябва да се формализират от архитекта от "сценарии за качество", те са предоставени на заинтересованите лице и те одобряват качествата.
	Сценариите демонстрират какво е качество за създаваната софтуерна система, като дават на архитекта и на заинтересованите лица основа за оценката на дизайна 
	
* Сценарии за качество 

	Това е конткретно и специфично изискване за това как системата трябва да се държи в определена ситуация, свързана с дадено качество 
	
	Сценарите за качество играят същата роля за дефиниране на нефункционални качества както ролят играят сценариите за употреба (use-case)
	за дефиниция на функционалните изисквнаия 
	
* Описание на един сценарии за качество 

	Всеки сценарии описва някаква случка и се характеризира с 6 компонента:
	- Въздействие: състояние/събитие, което подлежи на обработка
	- Източник: обект (човек, система или нещо друго) който генерира въздействието
	- Обект: системата (или нейна конкретна част) върху кояти се случва въздействието
	- Контекст: Условията, при които се намира обекта по време на обработка на въздействието 
	- Резултат: действията, предприети от оебкта при случването на въздействието 
	- Количествени параметри: резултатът трябва да подлежи на някакви количествени измервания, така че да позволи проверка 
	дали сценарият се изпълнява съгласно изискванията 
	
	